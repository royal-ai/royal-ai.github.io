<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>保护模式 IO 特权级，RPL，CPL，DPL总结</title>
    <url>/2022/06/02/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-IO-%E7%89%B9%E6%9D%83%E7%BA%A7%EF%BC%8CRPL%EF%BC%8CCPL%EF%BC%8CDPL%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h2 id="特权级概念"><a href="#特权级概念" class="headerlink" title="特权级概念"></a>特权级概念</h2><p>在保护模式中，为了避免用户程序访问硬件和内核造成不必要的破坏，诞生了特权级的概念。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/1286783/1654151110784-b6c5b4ac-0442-4007-ba5d-8e122481928d.png#clientId=ue9f44f0e-a8a6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=213&id=uc9b49281&margin=%5Bobject%20Object%5D&name=image.png&originHeight=266&originWidth=380&originalType=binary&ratio=1&rotation=0&showTitle=true&size=64804&status=done&style=none&taskId=u7e25a3eb-a375-41c8-8892-1147542c673&title=%E7%89%B9%E6%9D%83%E7%BA%A7%E5%A4%A7%E5%B0%8F%E5%88%86%E5%B8%83&width=304" alt="image.png" title="特权级大小分布"><br>特权级按照权力从小到大分为0，1，2，3级，</p>
<span id="more"></span>
<ul>
<li>0级特权级主要是操作系统，可以直接控制硬件</li>
<li>1，2级特权级云心过的程序主要是虚拟机和驱动程序等系统服务</li>
<li>3级特权级运行的用户程序</li>
</ul>
<p>在计算机世界中，CPU是一切的资源的访问者，受访者可以分为代码段和数据段。在保护模式中，CPU通过段寄存器存储的段选择子去GDT（全局描述符表）或LDT（局部描述符表）中寻找段描述符，从而访问代码段和数据段。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/1286783/1654152027120-ab87ffbb-75d3-4d1a-bbb3-0b9f54d91459.png#clientId=ue9f44f0e-a8a6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=92&id=u0e9de3da&margin=%5Bobject%20Object%5D&name=image.png&originHeight=115&originWidth=374&originalType=binary&ratio=1&rotation=0&showTitle=true&size=26938&status=done&style=none&taskId=u4e601170-2cc3-4a82-b7c1-86b1176c179&title=%E6%AE%B5%E9%80%89%E6%8B%A9%E5%AD%90%E7%BB%93%E6%9E%84&width=299.2" alt="image.png" title="段选择子结构"><br>RPL和CPL代表访问者的权力。RPL的全称是Requested privilege level（请求特权级），存储在段选择子中。CS代码段寄存器的RPL就是CPL全称是cureent privilege level（当前特权级），代表CPU当前的特权级层次。其他段选择子的RPL的作用是显示真正请求者的特权级（后面会详细讲到）。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/1286783/1654152273816-5514a256-bb1b-4115-ae0a-b945ad30230e.png#clientId=ue9f44f0e-a8a6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=280&id=u154e6776&margin=%5Bobject%20Object%5D&name=image.png&originHeight=350&originWidth=829&originalType=binary&ratio=1&rotation=0&showTitle=true&size=107893&status=done&style=none&taskId=u9aff9e2d-de3f-4ad6-bfb3-fe22113e067&title=%E6%AE%B5%E6%8F%8F%E8%BF%B0%E7%AC%A6%E7%BB%93%E6%9E%84&width=663.2" alt="image.png" title="段描述符结构"><br>DPL代表的是受访者要求的特权级。DPL的全称Descriptor Privilege Level（当前特权级），存储在段描述符中。</p>
<h2 id="CPL的变化"><a href="#CPL的变化" class="headerlink" title="CPL的变化"></a>CPL的变化</h2><p>CPL存储在CS寄存器的RPL中。一般来说，CPU转移到目标代码段（不一致性代码段）后，CPL会被修改成目标代码段的DPL。</p>
<ul>
<li>CPL数值由小变大的唯一情况是：处理器从中断处理程序返回到用户态。</li>
<li>CPL数字由大变小可以通过调用中断门，任务门和调用门等完成。</li>
</ul>
<h3 id="一致性代码段和非一致性代码段"><a href="#一致性代码段和非一致性代码段" class="headerlink" title="一致性代码段和非一致性代码段"></a>一致性代码段和非一致性代码段</h3><p>在操作系统中，我们有些高特权级的代码是希望被低特权级的程序所访问的，比如一些库函数，于是我们将这些高特权级代码放在一个叫做一致代码段的段里。而有些高特权级的代码，我们并不想让低特权级的程序所访问，于是我们把他们放在一个叫做非一致代码段的段里。<br>两者最主要的区别就是CPL是否会在转移之后被替代成目标代码段的DPL，也就是当前CPU的特权级是否发生了改变。</p>
<h2 id="特权级检查"><a href="#特权级检查" class="headerlink" title="特权级检查"></a>特权级检查</h2><p>处理器的特权级检查只发生在往段寄存器中加载选择子时，检查通过后，再从该段进行后续数据访问时就不需要进行特权检查了。<br>CPU进行不同的操作所需要的特权级检查也不同。</p>
<h3 id="数据段访问"><a href="#数据段访问" class="headerlink" title="数据段访问"></a>数据段访问</h3><p>CPU访问数据段需要满足两个条件。<br>第一个是CPL &lt;&#x3D;数据段DPL，也就是当前访问者的权限大于等于数据段所需要的权限DPL。<br>第二个是RPL &lt;&#x3D;数据段DPL。当用户程序通过调用门访问内核程序读取磁盘数据时，需要提供数据段选择子存储得到的数据。假设参数被恶意修改成内核数据段选择子（破坏内核），该选择子的RPL会在CPU调用时被替换成用户程序的CPL。又因为内核数据段选择子的DPL数值为0小于选择子的RPL数值3，因此特权级检查不通过！！这就是RPL的作用。<br>总结来看对于数据段的访问需要满足数值上，max{CPL,RPL} &lt;&#x3D; DPL。</p>
<h3 id="非一致性代码段访问"><a href="#非一致性代码段访问" class="headerlink" title="非一致性代码段访问"></a>非一致性代码段访问</h3><p>不使用调用门的情况下只能平级访问，即CPL&#x3D;&#x3D; DPL</p>
<h3 id="一致性代码段访问"><a href="#一致性代码段访问" class="headerlink" title="一致性代码段访问"></a>一致性代码段访问</h3><p>一致性代码段也称为依从代码段， Confonning ，用来实现从低特权级的代码向高特权级的代码转移。一致性代码段是指如果自己是转移后的目标段，自己的特权级（ DPL) 一定要大于等于转移前的 CPL 。在数值上，CPL &gt;&#x3D; DPL。</p>
<h3 id="门访问"><a href="#门访问" class="headerlink" title="门访问"></a>门访问</h3><p>CPU可以利用门来进行低特权级向高特权级的飞跃。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/1286783/1654155680599-6dbb0a96-4042-4b0d-8f2c-bc6853c5ee96.png#clientId=ue9f44f0e-a8a6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=245&id=uc4e7f5e8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=306&originWidth=329&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56402&status=done&style=none&taskId=ub0fbd217-a740-460b-ad17-83ed1446cef&title=&width=263.2" alt="image.png"><br>因此在数值上，门的DPL&gt;&#x3D; CPL。并且CPL&gt;&#x3D; 目标代码段的DPL。</p>
<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li>《操作系统真象还原》郑钢</li>
<li><a href="https://segmentfault.com/a/1190000020034966">保护模式特权级概述</a></li>
</ul>
]]></content>
  </entry>
</search>
